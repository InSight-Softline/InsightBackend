stages:          
  - test
  - build
  - release
  - deploy

 # TESTING STAGE :)
e2e-test-job:
  image: gradle:8-jdk21
  stage: test    
  script:
    - echo "Running e2e tests... This will take about 60 seconds."
    - ./gradlew test

#Sonecube Stage
sonarqube-check:
  stage: test
  image: gradle:8-jdk21
  variables:
    SONAR_USER_HOME: "${CI_PROJECT_DIR}/.sonar"  # Defines the location of the analysis task cache
    GIT_DEPTH: "0"  # Tells git to fetch all the branches of the project, required by the analysis task
  cache:
    key: "${CI_JOB_NAME}"
    paths:
      - .sonar/cache
  script: gradle sonar
  allow_failure: true
  only:
    - merge_requests
    - master
    - main
    - develop

# BUILD STAGE
backend-build-job:      
  image: gradle:8-jdk21
  stage: build
  environment: production
  #rules:
  # - if: $CI_COMMIT_REF_NAME == "main"
  script:
    - echo "Building the application..."
    - ./gradlew bootJar
    - echo "Building complete! :)"
  artifacts:
    paths:
      - build/libs/*.jar 

docker-deploy-job:
  image: docker:20
  stage: release
  services:
    - docker:dind
  variables:
    DOCKER_HOST: tcp://docker:2375/
    DOCKER_DRIVER: overlay2
    DOCKER_TLS_CERTDIR: ""
  dependencies:
    - backend-build-job
  #rules:
  # - if: $CI_COMMIT_REF_NAME == "main"
  script:
    - echo "Building & Deploying Docker Image..."
    - docker logout
    - echo -n "${CI_REGISTRY_PASSWORD}" | docker login $CI_REGISTRY -u $CI_REGISTRY_USER --password-stdin    
    - docker build --build-arg JAR_FILE=build/libs/*.jar -t gitlab.dit.htwk-leipzig.de:5050/projekt2024-s-audit-tool/backend .    
    - docker push gitlab.dit.htwk-leipzig.de:5050/projekt2024-s-audit-tool/backend
    - echo "[*] Image Build & Deployment was executed."

#DEPLOYMENT STAGE
publish-job:      
  stage: deploy  
  variables:
    DOCKER_IMAGE: gitlab.dit.htwk-leipzig.de:5050/projekt2024-s-audit-tool/backend:latest
  #rules:
  # - if: $CI_COMMIT_REF_NAME == "main"
  before_script:
  - 'command -v ssh-agent >/dev/null || ( apk add --update openssh )' 
  - eval $(ssh-agent -s)
  - echo "$SSH_KEY" | tr -d '\r' | ssh-add -
  - mkdir -p ~/.ssh
  - chmod 700 ~/.ssh
  - ssh-keyscan 141.57.8.208 >> ~/.ssh/known_hosts
  - chmod 644 ~/.ssh/known_hosts
  script:
    # gitlab runner config
    #- podman-compose -p backend -f docker-compose.production.yml pull 
    #- podman-compose -p backend -f docker-compose.production.yml down
    #- podman-compose -p backend -f docker-compose.production.yml up -d
    #- scp -i ~/.ssh/id_rsa $APPLICATION_PROPERTIES $REMOTE_USERNAME@$REMOTE_HOST:/home/$REMOTE_USERNAME/application.properties
    - |
      ssh stud-fim@141.57.8.208 /bin/bash << 'EOT'
      echo -n "${CI_REGISTRY_PASSWORD}" | podman login $CI_REGISTRY -u $CI_REGISTRY_USER --password-stdin
      podman-compose -f docker-compose.production.yml pull
      podman-compose -f docker-compose.production.yml up -d
      EOT



